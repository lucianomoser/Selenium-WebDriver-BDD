// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace NFSe.Portal.TestesIntegracao.Declaracao.DeclaracaoNota.SimplesNacional.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class ServicosTomadosDentroDoLimiteFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "ServicosTomadosDentroDoLimite.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ServicosTomadosDentroDoLimite", "\t\t Como um usuário do sistema\r\n\t\t Desejo declarar um nota fiscal de SERVIÇOS TOMA" +
                    "DOS\r\n\t\t Sendo eu uma EMPRESA ESTABELECIDA e OPTANTE DO SIMPLES NACIONAL\r\n\t\t E es" +
                    "tando DENTRO DO SUBLIMITE de faturamento", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "ServicosTomadosDentroDoLimite")))
            {
                global::NFSe.Portal.TestesIntegracao.Declaracao.DeclaracaoNota.SimplesNacional.Features.ServicosTomadosDentroDoLimiteFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 8
 #line 9
 testRunner.Given("que eu esteja executando a declaração de serviços pela primeira vez", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Usuario",
                        "Senha"});
            table1.AddRow(new string[] {
                        "\'01977364918\'",
                        "123"});
#line 10
 testRunner.Given("que eu logue no portal com os seguintes dados", ((string)(null)), table1, "Given ");
#line 14
 testRunner.And("realize a autenticação no cnpj \"06864931000114\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
 testRunner.Given("que a empresa de CNPJ \"06864931000114\" é estabelecido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 17
 testRunner.Given("que a empresa de CNPJ \"06864931000114\" é optante do Simples Nacional", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mes",
                        "Ano",
                        "Faturamento",
                        "MercadoExterno",
                        "RegimeCaixa",
                        "RegimeCaixaME",
                        "FatorR",
                        "AtingiuSubLimite",
                        "UltrapassouSubLimite",
                        "SubLimiteViaRba"});
            table2.AddRow(new string[] {
                        "06",
                        "2017",
                        "100000",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table2.AddRow(new string[] {
                        "07",
                        "2017",
                        "100000",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table2.AddRow(new string[] {
                        "08",
                        "2017",
                        "50000",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table2.AddRow(new string[] {
                        "09",
                        "2017",
                        "100000",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table2.AddRow(new string[] {
                        "10",
                        "2017",
                        "145000",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table2.AddRow(new string[] {
                        "11",
                        "2017",
                        "150000",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table2.AddRow(new string[] {
                        "12",
                        "2017",
                        "265000",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table2.AddRow(new string[] {
                        "01",
                        "2018",
                        "700000",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table2.AddRow(new string[] {
                        "02",
                        "2018",
                        "50000",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table2.AddRow(new string[] {
                        "03",
                        "2018",
                        "120000",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table2.AddRow(new string[] {
                        "04",
                        "2018",
                        "80000",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table2.AddRow(new string[] {
                        "05",
                        "2018",
                        "111500",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table2.AddRow(new string[] {
                        "06",
                        "2018",
                        "135000",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table2.AddRow(new string[] {
                        "07",
                        "2018",
                        "60000",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table2.AddRow(new string[] {
                        "08",
                        "2018",
                        "65000",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 19
 testRunner.Given("que a empresa de CNPJ \"06864931000114\" possui os seguintes faturamentos", ((string)(null)), table2, "Given ");
#line 37
 testRunner.Given("que eu selecione a opção de Declaração de Serviços", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 38
 testRunner.Given("que eu solicite uma nova declaração para a competência \"08/2018\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("I04 - Prestador Estabelecido Não Optante do Simples Nacional - Sem Retenção")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ServicosTomadosDentroDoLimite")]
        public virtual void I04_PrestadorEstabelecidoNaoOptanteDoSimplesNacional_SemRetencao()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("I04 - Prestador Estabelecido Não Optante do Simples Nacional - Sem Retenção", null, ((string[])(null)));
#line 42
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
 this.FeatureBackground();
#line 44
 testRunner.Given("que a empresa de CNPJ \"07065385000114\" é estabelecido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 45
 testRunner.Given("que a empresa de CNPJ \"07065385000114\" é do tipo Homologado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "ServicoFederal",
                        "ServicoMunicipal",
                        "Anexo",
                        "RetencaoTomador",
                        "SujeitoFatoR",
                        "DevidoNoLocal",
                        "Aliquota"});
            table3.AddRow(new string[] {
                        "\'07.02\'",
                        "\'4212000\'",
                        "AnexoIII",
                        "Não",
                        "Não",
                        "Não",
                        "2.8"});
#line 47
 testRunner.Given("a seguinte configuração de serviços", ((string)(null)), table3, "Given ");
#line 51
 testRunner.Given("que eu solicite uma nova declaração de nota de serviço", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Modalidade",
                        "Emissao",
                        "Numero",
                        "Serie",
                        "Aliquota",
                        "TomadorPrestador",
                        "Retido",
                        "ServicoFederal",
                        "ServicoMunicipal",
                        "MunicipioPrestacao",
                        "Valor"});
            table4.AddRow(new string[] {
                        "Tomado",
                        "\'15/08/2018\'",
                        "\'1234\'",
                        "\'A\'",
                        "\'0\'",
                        "\'07065385000114\'",
                        "Não",
                        "\'07.02\'",
                        "\'4212000\'",
                        "\'Cerejeiras\'",
                        "100000"});
#line 52
 testRunner.And("forneça os seguintes dados para formulário de declaracao de nota", ((string)(null)), table4, "And ");
#line 56
 testRunner.Then("o status Habilitado para o campo Alíquota deverá ser \"false\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 57
 testRunner.Then("o valor do campo Alíquota deverá ser igual a 2,80", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("I05 - Prestador Estabelecido Não Optante do Simples Nacional - Com Retenção")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ServicosTomadosDentroDoLimite")]
        public virtual void I05_PrestadorEstabelecidoNaoOptanteDoSimplesNacional_ComRetencao()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("I05 - Prestador Estabelecido Não Optante do Simples Nacional - Com Retenção", null, ((string[])(null)));
#line 61
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
 this.FeatureBackground();
#line 63
 testRunner.Given("que a empresa de CNPJ \"07065385000114\" é estabelecido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 64
 testRunner.Given("que a empresa de CNPJ \"07065385000114\" é do tipo Homologado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "ServicoFederal",
                        "ServicoMunicipal",
                        "Anexo",
                        "RetencaoTomador",
                        "SujeitoFatoR",
                        "DevidoNoLocal",
                        "Aliquota"});
            table5.AddRow(new string[] {
                        "\'07.02\'",
                        "\'4212000\'",
                        "AnexoIII",
                        "Não",
                        "Não",
                        "Não",
                        "2.8"});
#line 66
 testRunner.Given("a seguinte configuração de serviços", ((string)(null)), table5, "Given ");
#line 70
 testRunner.Given("que eu solicite uma nova declaração de nota de serviço", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Modalidade",
                        "Emissao",
                        "Numero",
                        "Serie",
                        "Aliquota",
                        "TomadorPrestador",
                        "Retido",
                        "ServicoFederal",
                        "ServicoMunicipal",
                        "MunicipioPrestacao",
                        "Valor"});
            table6.AddRow(new string[] {
                        "Tomado",
                        "\'15/08/2018\'",
                        "\'1234\'",
                        "\'A\'",
                        "\'0\'",
                        "\'07065385000114\'",
                        "Sim",
                        "\'07.02\'",
                        "\'4212000\'",
                        "\'Cerejeiras\'",
                        "100000"});
#line 71
 testRunner.And("forneça os seguintes dados para formulário de declaracao de nota", ((string)(null)), table6, "And ");
#line 75
 testRunner.Then("o status Habilitado para o campo Alíquota deverá ser \"false\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 76
    testRunner.Then("o valor do campo Alíquota deverá ser igual a 2,80", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("I06 - Prestador Estabelecido Optante do Simples Nacional - Sem Retenção")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ServicosTomadosDentroDoLimite")]
        public virtual void I06_PrestadorEstabelecidoOptanteDoSimplesNacional_SemRetencao()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("I06 - Prestador Estabelecido Optante do Simples Nacional - Sem Retenção", null, ((string[])(null)));
#line 80
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
 this.FeatureBackground();
#line 82
 testRunner.Given("que a empresa de CNPJ \"07065385000114\" é estabelecido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 83
 testRunner.Given("que a empresa de CNPJ \"07065385000114\" é optante do Simples Nacional", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "ServicoFederal",
                        "ServicoMunicipal",
                        "Anexo",
                        "RetencaoTomador",
                        "SujeitoFatoR",
                        "DevidoNoLocal",
                        "Aliquota"});
            table7.AddRow(new string[] {
                        "\'07.02\'",
                        "\'4212000\'",
                        "AnexoIII",
                        "Não",
                        "Não",
                        "Não",
                        "2.8"});
#line 85
 testRunner.Given("a seguinte configuração de serviços", ((string)(null)), table7, "Given ");
#line 89
 testRunner.Given("que eu solicite uma nova declaração de nota de serviço", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Modalidade",
                        "Emissao",
                        "Numero",
                        "Serie",
                        "Aliquota",
                        "TomadorPrestador",
                        "Retido",
                        "ServicoFederal",
                        "ServicoMunicipal",
                        "MunicipioPrestacao",
                        "Valor"});
            table8.AddRow(new string[] {
                        "Tomado",
                        "\'15/08/2018\'",
                        "\'1234\'",
                        "\'A\'",
                        "\'0\'",
                        "\'07065385000114\'",
                        "Não",
                        "\'07.02\'",
                        "\'4212000\'",
                        "\'Cerejeiras\'",
                        "100000"});
#line 90
 testRunner.And("forneça os seguintes dados para formulário de declaracao de nota", ((string)(null)), table8, "And ");
#line 94
 testRunner.Then("o status Habilitado para o campo Alíquota deverá ser \"false\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 95
 testRunner.Then("o valor do campo Alíquota deverá ser igual a 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("I07 - Prestador Estabelecido Optante do Simples Nacional - Com Retenção")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ServicosTomadosDentroDoLimite")]
        public virtual void I07_PrestadorEstabelecidoOptanteDoSimplesNacional_ComRetencao()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("I07 - Prestador Estabelecido Optante do Simples Nacional - Com Retenção", null, ((string[])(null)));
#line 99
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
 this.FeatureBackground();
#line 101
 testRunner.Given("que a empresa de CNPJ \"07065385000114\" é estabelecido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 102
 testRunner.Given("que a empresa de CNPJ \"07065385000114\" é optante do Simples Nacional", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "ServicoFederal",
                        "ServicoMunicipal",
                        "Anexo",
                        "RetencaoTomador",
                        "SujeitoFatoR",
                        "DevidoNoLocal",
                        "Aliquota"});
            table9.AddRow(new string[] {
                        "\'22.01\'",
                        "\'5221400\'",
                        "AnexoIII",
                        "Sim",
                        "Não",
                        "Não",
                        "2.8"});
#line 104
 testRunner.Given("a seguinte configuração de serviços", ((string)(null)), table9, "Given ");
#line 108
 testRunner.Given("que eu solicite uma nova declaração de nota de serviço", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Modalidade",
                        "Emissao",
                        "Numero",
                        "Serie",
                        "Aliquota",
                        "TomadorPrestador",
                        "Retido",
                        "ServicoFederal",
                        "ServicoMunicipal",
                        "MunicipioPrestacao",
                        "Valor"});
            table10.AddRow(new string[] {
                        "Tomado",
                        "\'15/08/2018\'",
                        "\'1234\'",
                        "\'A\'",
                        "\'0\'",
                        "\'07065385000114\'",
                        "Sim",
                        "\'22.01\'",
                        "\'5221400\'",
                        "\'Cerejeiras\'",
                        "100000"});
#line 109
 testRunner.And("forneça os seguintes dados para formulário de declaracao de nota", ((string)(null)), table10, "And ");
#line 113
 testRunner.Then("o status Habilitado para o campo Alíquota deverá ser \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 114
 testRunner.Then("o valor do campo Alíquota deverá ser maior ou igual a 2,00", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 115
 testRunner.Then("o valor do campo Alíquota deverá ser menor ou igual a 5,00", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("I12 - Alíquota Miníma do Simples Nacional, exceto itens 7.02, 7.05 e 16.01")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ServicosTomadosDentroDoLimite")]
        public virtual void I12_AliquotaMinimaDoSimplesNacionalExcetoItens7_027_05E16_01()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("I12 - Alíquota Miníma do Simples Nacional, exceto itens 7.02, 7.05 e 16.01", null, ((string[])(null)));
#line 119
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
 this.FeatureBackground();
#line 121
 testRunner.Given("que a empresa de CNPJ \"07065385000114\" é estabelecido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 122
 testRunner.Given("que a empresa de CNPJ \"07065385000114\" é optante do Simples Nacional", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "ServicoFederal",
                        "ServicoMunicipal",
                        "Anexo",
                        "RetencaoTomador",
                        "SujeitoFatoR",
                        "DevidoNoLocal",
                        "Aliquota"});
            table11.AddRow(new string[] {
                        "\'07.02\'",
                        "\'4212000\'",
                        "AnexoIII",
                        "Sim",
                        "Não",
                        "Não",
                        "2.8"});
#line 124
 testRunner.Given("a seguinte configuração de serviços", ((string)(null)), table11, "Given ");
#line 128
 testRunner.Given("que eu solicite uma nova declaração de nota de serviço", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Modalidade",
                        "Emissao",
                        "Numero",
                        "Serie",
                        "Aliquota",
                        "TomadorPrestador",
                        "Retido",
                        "ServicoFederal",
                        "ServicoMunicipal",
                        "MunicipioPrestacao",
                        "Valor"});
            table12.AddRow(new string[] {
                        "Tomado",
                        "\'15/08/2018\'",
                        "\'1234\'",
                        "\'A\'",
                        "\'0\'",
                        "\'07065385000114\'",
                        "Sim",
                        "\'07.02\'",
                        "\'4212000\'",
                        "\'Cerejeiras\'",
                        "100000"});
#line 129
 testRunner.And("forneça os seguintes dados para formulário de declaracao de nota", ((string)(null)), table12, "And ");
#line 133
 testRunner.Then("o status Habilitado para o campo Alíquota deverá ser \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 134
 testRunner.Then("o valor do campo Alíquota deverá ser maior ou igual a 0,01", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 135
 testRunner.Then("o valor do campo Alíquota deverá ser menor ou igual a 5,00", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("I08 - Prestador Não Estabelecido Não Optante do Simples Nacional - Sem Retenção")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ServicosTomadosDentroDoLimite")]
        public virtual void I08_PrestadorNaoEstabelecidoNaoOptanteDoSimplesNacional_SemRetencao()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("I08 - Prestador Não Estabelecido Não Optante do Simples Nacional - Sem Retenção", null, ((string[])(null)));
#line 138
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
 this.FeatureBackground();
#line 140
 testRunner.Given("que a empresa de CNPJ \"07065385000114\" não é estabelecido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 141
 testRunner.Given("que a empresa não estabelecida de CNPJ \"07065385000114\" está cadastrada como Pres" +
                    "tadora da empresa de CNPJ \"06864931000114\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 142
 testRunner.Given("que a empresa de CNPJ \"07065385000114\" é do tipo Homologado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "ServicoFederal",
                        "ServicoMunicipal",
                        "Anexo",
                        "RetencaoTomador",
                        "SujeitoFatoR",
                        "DevidoNoLocal",
                        "Aliquota"});
            table13.AddRow(new string[] {
                        "\'07.02\'",
                        "\'4212000\'",
                        "AnexoIII",
                        "Não",
                        "Não",
                        "Não",
                        "2.8"});
#line 144
 testRunner.Given("a seguinte configuração de serviços", ((string)(null)), table13, "Given ");
#line 148
 testRunner.Given("que eu solicite uma nova declaração de nota de serviço", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Modalidade",
                        "Emissao",
                        "Numero",
                        "Serie",
                        "Aliquota",
                        "TomadorPrestador",
                        "Retido",
                        "ServicoFederal",
                        "ServicoMunicipal",
                        "MunicipioPrestacao",
                        "Valor"});
            table14.AddRow(new string[] {
                        "Tomado",
                        "\'15/08/2018\'",
                        "\'1234\'",
                        "\'A\'",
                        "\'0\'",
                        "\'07065385000114\'",
                        "Não",
                        "\'07.02\'",
                        "\'4212000\'",
                        "\'Cerejeiras\'",
                        "100000"});
#line 149
 testRunner.And("forneça os seguintes dados para formulário de declaracao de nota", ((string)(null)), table14, "And ");
#line 153
 testRunner.Then("o status Habilitado para o campo Alíquota deverá ser \"false\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 154
 testRunner.Then("o valor do campo Alíquota deverá ser igual a 2,80", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("I09 - Prestador Não Estabelecido Não Optante do Simples Nacional - Com Retenção")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ServicosTomadosDentroDoLimite")]
        public virtual void I09_PrestadorNaoEstabelecidoNaoOptanteDoSimplesNacional_ComRetencao()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("I09 - Prestador Não Estabelecido Não Optante do Simples Nacional - Com Retenção", null, ((string[])(null)));
#line 158
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
 this.FeatureBackground();
#line 160
 testRunner.Given("que a empresa de CNPJ \"07065385000114\" não é estabelecido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 161
 testRunner.Given("que a empresa não estabelecida de CNPJ \"07065385000114\" está cadastrada como Pres" +
                    "tadora da empresa de CNPJ \"06864931000114\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 162
 testRunner.Given("que a empresa de CNPJ \"07065385000114\" é do tipo Homologado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "ServicoFederal",
                        "ServicoMunicipal",
                        "Anexo",
                        "RetencaoTomador",
                        "SujeitoFatoR",
                        "DevidoNoLocal",
                        "Aliquota"});
            table15.AddRow(new string[] {
                        "\'07.02\'",
                        "\'4212000\'",
                        "AnexoIII",
                        "Não",
                        "Não",
                        "Não",
                        "2.8"});
#line 164
 testRunner.Given("a seguinte configuração de serviços", ((string)(null)), table15, "Given ");
#line 168
 testRunner.Given("que eu solicite uma nova declaração de nota de serviço", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Modalidade",
                        "Emissao",
                        "Numero",
                        "Serie",
                        "Aliquota",
                        "TomadorPrestador",
                        "Retido",
                        "ServicoFederal",
                        "ServicoMunicipal",
                        "MunicipioPrestacao",
                        "Valor"});
            table16.AddRow(new string[] {
                        "Tomado",
                        "\'15/08/2018\'",
                        "\'1234\'",
                        "\'A\'",
                        "\'0\'",
                        "\'07065385000114\'",
                        "Sim",
                        "\'07.02\'",
                        "\'4212000\'",
                        "\'Cerejeiras\'",
                        "100000"});
#line 169
 testRunner.And("forneça os seguintes dados para formulário de declaracao de nota", ((string)(null)), table16, "And ");
#line 173
 testRunner.Then("o status Habilitado para o campo Alíquota deverá ser \"false\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 174
 testRunner.Then("o valor do campo Alíquota deverá ser igual a 2,80", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("I10 - Prestador Não Estabelecido Optante do Simples Nacional - Sem Retenção")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ServicosTomadosDentroDoLimite")]
        public virtual void I10_PrestadorNaoEstabelecidoOptanteDoSimplesNacional_SemRetencao()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("I10 - Prestador Não Estabelecido Optante do Simples Nacional - Sem Retenção", null, ((string[])(null)));
#line 178
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
 this.FeatureBackground();
#line 180
 testRunner.Given("que a empresa de CNPJ \"07065385000114\" não é estabelecido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 181
 testRunner.Given("que a empresa não estabelecida de CNPJ \"07065385000114\" está cadastrada como Pres" +
                    "tadora da empresa de CNPJ \"06864931000114\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 182
 testRunner.Given("que a empresa de CNPJ \"07065385000114\" é optante do Simples Nacional e empresa nã" +
                    "o é estabelecido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "ServicoFederal",
                        "ServicoMunicipal",
                        "Anexo",
                        "RetencaoTomador",
                        "SujeitoFatoR",
                        "DevidoNoLocal",
                        "Aliquota"});
            table17.AddRow(new string[] {
                        "\'07.02\'",
                        "\'4212000\'",
                        "AnexoIII",
                        "Não",
                        "Não",
                        "Não",
                        "2.8"});
#line 186
 testRunner.Given("a seguinte configuração de serviços", ((string)(null)), table17, "Given ");
#line 190
 testRunner.Given("que eu solicite uma nova declaração de nota de serviço", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Modalidade",
                        "Emissao",
                        "Numero",
                        "Serie",
                        "Aliquota",
                        "TomadorPrestador",
                        "Retido",
                        "ServicoFederal",
                        "ServicoMunicipal",
                        "MunicipioPrestacao",
                        "Valor"});
            table18.AddRow(new string[] {
                        "Tomado",
                        "\'15/08/2018\'",
                        "\'1234\'",
                        "\'A\'",
                        "\'0\'",
                        "\'07065385000114\'",
                        "Não",
                        "\'07.02\'",
                        "\'4212000\'",
                        "\'Cerejeiras\'",
                        "100000"});
#line 191
 testRunner.And("forneça os seguintes dados para formulário de declaracao de nota", ((string)(null)), table18, "And ");
#line 195
 testRunner.Then("o status Habilitado para o campo Alíquota deverá ser \"false\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 196
 testRunner.Then("o valor do campo Alíquota deverá ser igual a 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("I11 - Prestador Não Estabelecido Optante do Simples Nacional - Com Retenção")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ServicosTomadosDentroDoLimite")]
        public virtual void I11_PrestadorNaoEstabelecidoOptanteDoSimplesNacional_ComRetencao()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("I11 - Prestador Não Estabelecido Optante do Simples Nacional - Com Retenção", null, ((string[])(null)));
#line 200
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
 this.FeatureBackground();
#line 202
 testRunner.Given("que a empresa de CNPJ \"07065385000114\" não é estabelecido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 203
 testRunner.Given("que a empresa não estabelecida de CNPJ \"07065385000114\" está cadastrada como Pres" +
                    "tadora da empresa de CNPJ \"06864931000114\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 204
 testRunner.Given("que a empresa de CNPJ \"07065385000114\" é optante do Simples Nacional", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "ServicoFederal",
                        "ServicoMunicipal",
                        "Anexo",
                        "RetencaoTomador",
                        "SujeitoFatoR",
                        "DevidoNoLocal",
                        "Aliquota"});
            table19.AddRow(new string[] {
                        "\'07.02\'",
                        "\'4212000\'",
                        "AnexoIII",
                        "Sim",
                        "Não",
                        "Não",
                        "2.8"});
#line 206
 testRunner.Given("a seguinte configuração de serviços", ((string)(null)), table19, "Given ");
#line 210
 testRunner.Given("que eu solicite uma nova declaração de nota de serviço", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Modalidade",
                        "Emissao",
                        "Numero",
                        "Serie",
                        "Aliquota",
                        "TomadorPrestador",
                        "Retido",
                        "ServicoFederal",
                        "ServicoMunicipal",
                        "MunicipioPrestacao",
                        "Valor"});
            table20.AddRow(new string[] {
                        "Tomado",
                        "\'15/08/2018\'",
                        "\'1234\'",
                        "\'A\'",
                        "\'0\'",
                        "\'07065385000114\'",
                        "Sim",
                        "\'07.02\'",
                        "\'4212000\'",
                        "\'Cerejeiras\'",
                        "100000"});
#line 211
 testRunner.And("forneça os seguintes dados para formulário de declaracao de nota", ((string)(null)), table20, "And ");
#line 215
 testRunner.Then("o status Habilitado para o campo Alíquota deverá ser \"false\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 216
 testRunner.Then("o valor do campo Alíquota deverá ser maior ou igual a 2,00", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 217
 testRunner.Then("o valor do campo Alíquota deverá ser menor ou igual a 5,00", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("J04 - Prestador Estabelecido Não Optante do Simples Nacional - Sem Retenção")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ServicosTomadosDentroDoLimite")]
        public virtual void J04_PrestadorEstabelecidoNaoOptanteDoSimplesNacional_SemRetencao()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("J04 - Prestador Estabelecido Não Optante do Simples Nacional - Sem Retenção", null, ((string[])(null)));
#line 221
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
 this.FeatureBackground();
#line 223
 testRunner.Given("que a empresa de CNPJ \"07065385000114\" é estabelecido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 224
 testRunner.Given("que a empresa de CNPJ \"07065385000114\" é do tipo Homologado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "ServicoFederal",
                        "ServicoMunicipal",
                        "Anexo",
                        "RetencaoTomador",
                        "SujeitoFatoR",
                        "DevidoNoLocal",
                        "Aliquota"});
            table21.AddRow(new string[] {
                        "\'07.02\'",
                        "\'4212000\'",
                        "AnexoIII",
                        "Não",
                        "Não",
                        "Sim",
                        "2.8"});
#line 226
 testRunner.Given("a seguinte configuração de serviços", ((string)(null)), table21, "Given ");
#line 230
 testRunner.Given("que eu solicite uma nova declaração de nota de serviço", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Modalidade",
                        "Emissao",
                        "Numero",
                        "Serie",
                        "Aliquota",
                        "TomadorPrestador",
                        "Retido",
                        "ServicoFederal",
                        "ServicoMunicipal",
                        "MunicipioPrestacao",
                        "Valor"});
            table22.AddRow(new string[] {
                        "Tomado",
                        "\'15/08/2018\'",
                        "\'1234\'",
                        "\'A\'",
                        "\'0\'",
                        "\'07065385000114\'",
                        "Não",
                        "\'07.02\'",
                        "\'4212000\'",
                        "\'Buritis\'",
                        "100000"});
#line 231
 testRunner.And("forneça os seguintes dados para formulário de declaracao de nota", ((string)(null)), table22, "And ");
#line 235
 testRunner.Then("o status Habilitado para o campo Alíquota deverá ser \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 236
 testRunner.Then("o valor do campo Alíquota deverá ser maior ou igual a 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("J05 - Prestador Estabelecido Não Optante do Simples Nacional - Com Retenção")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ServicosTomadosDentroDoLimite")]
        public virtual void J05_PrestadorEstabelecidoNaoOptanteDoSimplesNacional_ComRetencao()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("J05 - Prestador Estabelecido Não Optante do Simples Nacional - Com Retenção", null, ((string[])(null)));
#line 241
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
 this.FeatureBackground();
#line 243
 testRunner.Given("que a empresa de CNPJ \"07065385000114\" é estabelecido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 244
 testRunner.Given("que a empresa de CNPJ \"07065385000114\" é do tipo Homologado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "ServicoFederal",
                        "ServicoMunicipal",
                        "Anexo",
                        "RetencaoTomador",
                        "SujeitoFatoR",
                        "DevidoNoLocal",
                        "Aliquota"});
            table23.AddRow(new string[] {
                        "\'07.02\'",
                        "\'4212000\'",
                        "AnexoIII",
                        "Sim",
                        "Não",
                        "Sim",
                        "2.8"});
#line 246
 testRunner.Given("a seguinte configuração de serviços", ((string)(null)), table23, "Given ");
#line 250
 testRunner.Given("que eu solicite uma nova declaração de nota de serviço", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Modalidade",
                        "Emissao",
                        "Numero",
                        "Serie",
                        "Aliquota",
                        "TomadorPrestador",
                        "Retido",
                        "ServicoFederal",
                        "ServicoMunicipal",
                        "MunicipioPrestacao",
                        "Valor"});
            table24.AddRow(new string[] {
                        "Tomado",
                        "\'15/08/2018\'",
                        "\'1234\'",
                        "\'A\'",
                        "\'0\'",
                        "\'07065385000114\'",
                        "Sim",
                        "\'07.02\'",
                        "\'4212000\'",
                        "\'Buritis\'",
                        "100000"});
#line 251
 testRunner.And("forneça os seguintes dados para formulário de declaracao de nota", ((string)(null)), table24, "And ");
#line 255
 testRunner.Then("o status Habilitado para o campo Alíquota deverá ser \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 256
 testRunner.Then("o valor do campo Alíquota deverá ser igual a 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("J06 - Prestador Estabelecido Optante do Simples Nacional - Sem Retenção")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ServicosTomadosDentroDoLimite")]
        public virtual void J06_PrestadorEstabelecidoOptanteDoSimplesNacional_SemRetencao()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("J06 - Prestador Estabelecido Optante do Simples Nacional - Sem Retenção", null, ((string[])(null)));
#line 261
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
 this.FeatureBackground();
#line 263
 testRunner.Given("que a empresa de CNPJ \"07065385000114\" é estabelecido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 264
 testRunner.Given("que a empresa de CNPJ \"07065385000114\" é optante do Simples Nacional", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "ServicoFederal",
                        "ServicoMunicipal",
                        "Anexo",
                        "RetencaoTomador",
                        "SujeitoFatoR",
                        "DevidoNoLocal",
                        "Aliquota"});
            table25.AddRow(new string[] {
                        "\'07.02\'",
                        "\'4212000\'",
                        "AnexoIII",
                        "Não",
                        "Não",
                        "Sim",
                        "2.8"});
#line 266
 testRunner.Given("a seguinte configuração de serviços", ((string)(null)), table25, "Given ");
#line 270
 testRunner.Given("que eu solicite uma nova declaração de nota de serviço", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Modalidade",
                        "Emissao",
                        "Numero",
                        "Serie",
                        "Aliquota",
                        "TomadorPrestador",
                        "Retido",
                        "ServicoFederal",
                        "ServicoMunicipal",
                        "MunicipioPrestacao",
                        "Valor"});
            table26.AddRow(new string[] {
                        "Tomado",
                        "\'15/08/2018\'",
                        "\'1234\'",
                        "\'A\'",
                        "\'0\'",
                        "\'07065385000114\'",
                        "Não",
                        "\'07.02\'",
                        "\'4212000\'",
                        "\'Buritis\'",
                        "100000"});
#line 271
 testRunner.And("forneça os seguintes dados para formulário de declaracao de nota", ((string)(null)), table26, "And ");
#line 276
 testRunner.Then("o valor do campo Alíquota deverá ser igual a 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("J07 - Prestador Estabelecido Optante do Simples Nacional - Com Retenção")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ServicosTomadosDentroDoLimite")]
        public virtual void J07_PrestadorEstabelecidoOptanteDoSimplesNacional_ComRetencao()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("J07 - Prestador Estabelecido Optante do Simples Nacional - Com Retenção", null, ((string[])(null)));
#line 280
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
 this.FeatureBackground();
#line 282
 testRunner.Given("que a empresa de CNPJ \"07065385000114\" é estabelecido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 283
 testRunner.Given("que a empresa de CNPJ \"07065385000114\" é optante do Simples Nacional", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "ServicoFederal",
                        "ServicoMunicipal",
                        "Anexo",
                        "RetencaoTomador",
                        "SujeitoFatoR",
                        "DevidoNoLocal",
                        "Aliquota"});
            table27.AddRow(new string[] {
                        "\'07.02\'",
                        "\'4212000\'",
                        "AnexoIII",
                        "Sim",
                        "Não",
                        "Sim",
                        "2.8"});
#line 285
 testRunner.Given("a seguinte configuração de serviços", ((string)(null)), table27, "Given ");
#line 289
 testRunner.Given("que eu solicite uma nova declaração de nota de serviço", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Modalidade",
                        "Emissao",
                        "Numero",
                        "Serie",
                        "Aliquota",
                        "TomadorPrestador",
                        "Retido",
                        "ServicoFederal",
                        "ServicoMunicipal",
                        "MunicipioPrestacao",
                        "Valor"});
            table28.AddRow(new string[] {
                        "Tomado",
                        "\'15/08/2018\'",
                        "\'1234\'",
                        "\'A\'",
                        "\'0\'",
                        "\'07065385000114\'",
                        "Sim",
                        "\'07.02\'",
                        "\'4212000\'",
                        "\'Buritis\'",
                        "100000"});
#line 290
 testRunner.And("forneça os seguintes dados para formulário de declaracao de nota", ((string)(null)), table28, "And ");
#line 294
 testRunner.Then("o status Habilitado para o campo Alíquota deverá ser \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 295
 testRunner.Then("o valor do campo Alíquota deverá ser maior ou igual a 0,0000000000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("J08 - Prestador Não Estabelecido Não Optante do Simples Nacional - Sem Retenção")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ServicosTomadosDentroDoLimite")]
        public virtual void J08_PrestadorNaoEstabelecidoNaoOptanteDoSimplesNacional_SemRetencao()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("J08 - Prestador Não Estabelecido Não Optante do Simples Nacional - Sem Retenção", null, ((string[])(null)));
#line 300
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
 this.FeatureBackground();
#line 302
 testRunner.Given("que a empresa de CNPJ \"07065385000114\" não é estabelecido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 303
 testRunner.Given("que a empresa não estabelecida de CNPJ \"07065385000114\" está cadastrada como Pres" +
                    "tadora da empresa de CNPJ \"06864931000114\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 304
 testRunner.Given("que a empresa de CNPJ \"07065385000114\" é do tipo Homologado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "ServicoFederal",
                        "ServicoMunicipal",
                        "Anexo",
                        "RetencaoTomador",
                        "SujeitoFatoR",
                        "DevidoNoLocal",
                        "Aliquota"});
            table29.AddRow(new string[] {
                        "\'07.02\'",
                        "\'4212000\'",
                        "AnexoIII",
                        "Não",
                        "Não",
                        "Sim",
                        "2.8"});
#line 306
 testRunner.Given("a seguinte configuração de serviços", ((string)(null)), table29, "Given ");
#line 310
 testRunner.Given("que eu solicite uma nova declaração de nota de serviço", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Modalidade",
                        "Emissao",
                        "Numero",
                        "Serie",
                        "Aliquota",
                        "TomadorPrestador",
                        "Retido",
                        "ServicoFederal",
                        "ServicoMunicipal",
                        "MunicipioPrestacao",
                        "Valor"});
            table30.AddRow(new string[] {
                        "Tomado",
                        "\'15/08/2018\'",
                        "\'1234\'",
                        "\'A\'",
                        "\'0\'",
                        "\'07065385000114\'",
                        "Não",
                        "\'07.02\'",
                        "\'4212000\'",
                        "\'Buritis\'",
                        "100000"});
#line 311
 testRunner.And("forneça os seguintes dados para formulário de declaracao de nota", ((string)(null)), table30, "And ");
#line 315
 testRunner.Then("o status Habilitado para o campo Alíquota deverá ser \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 316
 testRunner.Then("o valor do campo Alíquota deverá ser igual a 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("J09 - Prestador Não Estabelecido Não Optante do Simples Nacional - Com Retenção")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ServicosTomadosDentroDoLimite")]
        public virtual void J09_PrestadorNaoEstabelecidoNaoOptanteDoSimplesNacional_ComRetencao()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("J09 - Prestador Não Estabelecido Não Optante do Simples Nacional - Com Retenção", null, ((string[])(null)));
#line 321
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
 this.FeatureBackground();
#line 323
 testRunner.Given("que a empresa de CNPJ \"07065385000114\" não é estabelecido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 324
 testRunner.Given("que a empresa não estabelecida de CNPJ \"07065385000114\" está cadastrada como Pres" +
                    "tadora da empresa de CNPJ \"06864931000114\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 325
 testRunner.Given("que a empresa de CNPJ \"07065385000114\" é do tipo Homologado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "ServicoFederal",
                        "ServicoMunicipal",
                        "Anexo",
                        "RetencaoTomador",
                        "SujeitoFatoR",
                        "DevidoNoLocal",
                        "Aliquota"});
            table31.AddRow(new string[] {
                        "\'07.02\'",
                        "\'4212000\'",
                        "AnexoIII",
                        "Sim",
                        "Não",
                        "Sim",
                        "2.8"});
#line 327
 testRunner.Given("a seguinte configuração de serviços", ((string)(null)), table31, "Given ");
#line 331
 testRunner.Given("que eu solicite uma nova declaração de nota de serviço", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Modalidade",
                        "Emissao",
                        "Numero",
                        "Serie",
                        "Aliquota",
                        "TomadorPrestador",
                        "Retido",
                        "ServicoFederal",
                        "ServicoMunicipal",
                        "MunicipioPrestacao",
                        "Valor"});
            table32.AddRow(new string[] {
                        "Tomado",
                        "\'15/08/2018\'",
                        "\'1234\'",
                        "\'A\'",
                        "\'0\'",
                        "\'07065385000114\'",
                        "Sim",
                        "\'07.02\'",
                        "\'4212000\'",
                        "\'Buritis\'",
                        "100000"});
#line 332
 testRunner.And("forneça os seguintes dados para formulário de declaracao de nota", ((string)(null)), table32, "And ");
#line 336
 testRunner.Then("o status Habilitado para o campo Alíquota deverá ser \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 337
 testRunner.Then("o valor do campo Alíquota deverá ser igual a 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("J10 - Prestador Não Estabelecido Optante do Simples Nacional - Sem Retenção")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ServicosTomadosDentroDoLimite")]
        public virtual void J10_PrestadorNaoEstabelecidoOptanteDoSimplesNacional_SemRetencao()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("J10 - Prestador Não Estabelecido Optante do Simples Nacional - Sem Retenção", null, ((string[])(null)));
#line 342
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
 this.FeatureBackground();
#line 344
 testRunner.Given("que a empresa de CNPJ \"07065385000114\" não é estabelecido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 345
 testRunner.Given("que a empresa não estabelecida de CNPJ \"07065385000114\" está cadastrada como Pres" +
                    "tadora da empresa de CNPJ \"06864931000114\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 346
 testRunner.Given("que a empresa de CNPJ \"07065385000114\" é optante do Simples Nacional e empresa nã" +
                    "o é estabelecido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "ServicoFederal",
                        "ServicoMunicipal",
                        "Anexo",
                        "RetencaoTomador",
                        "SujeitoFatoR",
                        "DevidoNoLocal",
                        "Aliquota"});
            table33.AddRow(new string[] {
                        "\'07.02\'",
                        "\'4212000\'",
                        "AnexoIII",
                        "Não",
                        "Não",
                        "Sim",
                        "2.8"});
#line 348
 testRunner.Given("a seguinte configuração de serviços", ((string)(null)), table33, "Given ");
#line 352
 testRunner.Given("que eu solicite uma nova declaração de nota de serviço", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Modalidade",
                        "Emissao",
                        "Numero",
                        "Serie",
                        "Aliquota",
                        "TomadorPrestador",
                        "Retido",
                        "ServicoFederal",
                        "ServicoMunicipal",
                        "MunicipioPrestacao",
                        "Valor"});
            table34.AddRow(new string[] {
                        "Tomado",
                        "\'15/08/2018\'",
                        "\'1234\'",
                        "\'A\'",
                        "\'0\'",
                        "\'07065385000114\'",
                        "Não",
                        "\'07.02\'",
                        "\'4212000\'",
                        "\'Buritis\'",
                        "100000"});
#line 353
 testRunner.And("forneça os seguintes dados para formulário de declaracao de nota", ((string)(null)), table34, "And ");
#line 357
 testRunner.Then("o status Habilitado para o campo Alíquota deverá ser \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 358
 testRunner.Then("o valor do campo Alíquota deverá ser igual a 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("J11 - Prestador Não Estabelecido Optante do Simples Nacional - Com Retenção")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ServicosTomadosDentroDoLimite")]
        public virtual void J11_PrestadorNaoEstabelecidoOptanteDoSimplesNacional_ComRetencao()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("J11 - Prestador Não Estabelecido Optante do Simples Nacional - Com Retenção", null, ((string[])(null)));
#line 362
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
 this.FeatureBackground();
#line 364
 testRunner.Given("que a empresa de CNPJ \"07065385000114\" não é estabelecido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 365
 testRunner.Given("que a empresa não estabelecida de CNPJ \"07065385000114\" está cadastrada como Pres" +
                    "tadora da empresa de CNPJ \"06864931000114\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 366
 testRunner.Given("que a empresa de CNPJ \"07065385000114\" é optante do Simples Nacional", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "ServicoFederal",
                        "ServicoMunicipal",
                        "Anexo",
                        "RetencaoTomador",
                        "SujeitoFatoR",
                        "DevidoNoLocal",
                        "Aliquota"});
            table35.AddRow(new string[] {
                        "\'07.02\'",
                        "\'4212000\'",
                        "AnexoIII",
                        "Não",
                        "Não",
                        "Sim",
                        "2.8"});
#line 368
 testRunner.Given("a seguinte configuração de serviços", ((string)(null)), table35, "Given ");
#line 372
 testRunner.Given("que eu solicite uma nova declaração de nota de serviço", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Modalidade",
                        "Emissao",
                        "Numero",
                        "Serie",
                        "Aliquota",
                        "TomadorPrestador",
                        "Retido",
                        "ServicoFederal",
                        "ServicoMunicipal",
                        "MunicipioPrestacao",
                        "Valor"});
            table36.AddRow(new string[] {
                        "Tomado",
                        "\'15/08/2018\'",
                        "\'1234\'",
                        "\'A\'",
                        "\'0\'",
                        "\'07065385000114\'",
                        "Sim",
                        "\'07.02\'",
                        "\'4212000\'",
                        "\'Buritis\'",
                        "100000"});
#line 373
 testRunner.And("forneça os seguintes dados para formulário de declaracao de nota", ((string)(null)), table36, "And ");
#line 377
 testRunner.Then("o status Habilitado para o campo Alíquota deverá ser \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 378
 testRunner.Then("o valor do campo Alíquota deverá ser igual a 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

